{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/details/macro.njk" import govukDetails %}
{% from "govuk/components/error-message/macro.njk" import govukErrorMessage %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/textarea/macro.njk" import govukTextarea %}
{% from "govuk/components/warning-text/macro.njk" import govukWarningText %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from 'components/datepicker/macro.njk' import hmppsDatepicker %}
{% from "components/scheduledEvents/scheduledEvents.njk" import scheduledEvents %}
{% from "components/timePicker/timePicker.njk" import timePicker %}
{% from "components/miniBanner/miniBanner.njk" import miniBanner %}

{% extends "../../partials/layout.njk" %}

{% set recurringHtml %}
    <div data-qa="recurring-inputs">
        {{ govukSelect({
            id: "repeats",
            name: "repeats",
            label: {
                text: "Repeats"
            },
            classes: "js-appointment-repeats",
            items: repeatOptions | addDefaultSelectedValue('Select') | setSelected(formValues.repeats),
            errorMessage: errors | findError('repeats')
        }) }}

        {{ govukInput({
            id: "times",
            name: "times",
            value: formValues.times,
            errorMessage: errors | findError('times'),
            type: "number",
            label: {
                text: "How many appointments do you want to add?"
            },
            hint: {
                text: "This includes the first appointment you have already added above. You can add appointments up to a maximum of 1 year."
            },
            classes: "govuk-input--width-3 js-appointment-repeats-times"
        }) }}


        <div class="govuk-form-group js-appointment-last-appointment">
            <span class="govuk-body">Last appointment on</span>
            <div id="last-appointment-date" class=" govuk-body govuk-!-font-weight-bold last-appointment">
                {{ endOfPeriod }}
            </div>
        </div>
    </div>
{% endset -%}

{% set mainClasses = "govuk-body" %}
{% block content %}
    {% block body %}
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                {{ miniBanner(miniBannerData) }}
            </div>
        </div>

        {% if errors.length > 0 %}
            {{ govukErrorSummary({
                titleText: "There is a problem",
                errorList: errors,
                attributes: { 'data-qa-errors': true },
                classes: 'govuk-!-margin-bottom-6'
            })}}
        {% endif %}

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <h1 class="govuk-!-margin-bottom-3 govuk-!-margin-top-0">{{ pageTitle }}</h1>
            </div>
        </div>

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <form method="post" novalidate="novalidate" autocomplete="off" class="add-appointment-form">
                    <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                    <input type="hidden" name="refererUrl" value="{{ refererUrl }}" />
                    <input type="hidden" name="bookingId" value="{{ formValues.bookingId }}" />
                    <input type="hidden" id="prisonId" name="prisonId" value="{{ formValues.prisonId }}"/>
                    {% if appointmentId %}
                        <input type="hidden" id="appointment-id" name="appointmentId" value="{{ appointmentId }}"/>
                    {% endif %}

                    {# When editing a video link booking you cannot change the type of appointment, or the probation team - display only #}
                    {% if appointmentId %}
                        <input type="hidden" id="appointmentType" name="appointmentType" value="{{ formValues.appointmentType }}" />
                        {% if bvlsMasteredVlpmFeatureToggleEnabled() %}
                            <input type="hidden" id="probationTeam" name="probationTeam" value="{{ formValues.probationTeam }}" />
                        {% endif %}
                        {{ govukSummaryList({
                            classes: "govuk-summary-list--no-border",
                            rows: [
                                {
                                    key: {
                                        text: "Type of appointment"
                                    },
                                    value: {
                                        text: (appointmentTypes | find('value', formValues.appointmentType)).text
                                    }
                                },
                                {
                                    key: {
                                        text: "Probation team"
                                    },
                                    value: {
                                        text: (probationTeams | find('value', formValues.probationTeam)).text
                                    }
                                } if bvlsMasteredVlpmFeatureToggleEnabled()
                            ]
                        }) }}
                    {% else %}
                        {{ govukSelect({
                            id: "appointmentType",
                            name: "appointmentType",
                            label: {
                                text: "Type of appointment"
                            },
                            classes: 'govuk-!-width-one-half',
                            errorMessage: errors | findError('appointmentType'),
                            items: appointmentTypes | addDefaultSelectedValue('Select appointment type') | setSelected(formValues.appointmentType)
                        }) }}

                        {% if bvlsMasteredVlpmFeatureToggleEnabled() %}
                            {{ govukSelect({
                                id: "probationTeam",
                                name: "probationTeam",
                                label: {
                                    text: "Select the probation team the booking is for"
                                },
                                formGroup : {
                                    classes: "js-probation-team"
                                },
                                classes: 'govuk-!-width-one-half',
                                errorMessage: errors | findError('probationTeam'),
                                items: probationTeams | addDefaultSelectedValue('Select probation team') | setSelected(formValues.probationTeam)
                            }) }}
                        {% endif %}
                    {% endif %}

                    {{ govukSelect({
                        id: "location",
                        name: "location",
                        label: {
                            text: "Location"
                        },
                        classes: 'govuk-!-width-one-half',
                        errorMessage: errors | findError('location'),
                        items: locations | addDefaultSelectedValue('Select location') | setSelected(formValues.location)
                    }) }}

                    {% if bvlsMasteredVlpmFeatureToggleEnabled() %}
                        <div class="govuk-form-group js-probation-officer {{ 'govuk-form-group--error' if errors | findError("officerDetailsOrUnknown") }}">
                            <fieldset class="govuk-fieldset">
                                <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">Enter the probation officer's details</legend>
                                <p id="officerDetailsOrUnknown" class="govuk-error-message"><span class="govuk-visually-hidden">Error:</span>{{ (errors | findError("officerDetailsOrUnknown")).text }}</p>
                                <p class="govuk-body">You can enter the details later if not yet known</p>
                                {{ govukCheckboxes({
                                    idPrefix: "officerDetailsNotKnown",
                                    name: "officerDetailsNotKnown",
                                    items: [
                                        {
                                            value: "true",
                                            text: "Not yet known",
                                            checked: formValues.officerDetailsNotKnown
                                        },
                                        {
                                            divider: "or"
                                        }
                                    ],
                                    errorMessage: errors | findError("officerDetailsNotKnown"),
                                    formGroup: {
                                        classes: 'govuk-!-margin-bottom-3'
                                    },
                                    classes: "govuk-!-width-one-third"
                                }) }}

                                {{ govukInput({
                                    id: "officerFullName",
                                    name: "officerFullName",
                                    label: {
                                        text: "Full name"
                                    },
                                    errorMessage: errors | findError('officerFullName'),
                                    formGroup: {
                                        classes: 'govuk-!-margin-bottom-3'
                                    },
                                    classes: "govuk-!-width-one-half",
                                    value: formValues.officerFullName
                                }) }}

                                {{ govukInput({
                                    id: "officerEmail",
                                    name: "officerEmail",
                                    label: {
                                        text: "Email address"
                                    },
                                    errorMessage: errors | findError('officerEmail'),
                                    formGroup: {
                                        classes: 'govuk-!-margin-bottom-3'
                                    },
                                    classes: "govuk-!-width-one-half",
                                    value: formValues.officerEmail
                                }) }}

                                {{ govukInput({
                                    id: "officerTelephone",
                                    name: "officerTelephone",
                                    label: {
                                        text: "UK phone number (optional)"
                                    },
                                    errorMessage: errors | findError('officerTelephone'),
                                    classes: "govuk-input--width-10",
                                    value: formValues.officerTelephone
                                }) }}
                            </fieldset>
                        </div>

                        {# Replace OTHER to the end of the list #}
                        {% set meetingTypes = meetingTypes | filterNot('value', 'OTHER') %}
                        {% set meetingTypes = (meetingTypes.push({
                            value: 'OTHER',
                            text: 'Other'
                        }), meetingTypes) %}

                        {{ govukRadios({
                            idPrefix: "meetingType",
                            name: "meetingType",
                            fieldset: {
                                legend: {
                                    text: "Select meeting type",
                                    classes: "govuk-fieldset__legend--s"
                                }
                            },
                            formGroup : {
                                classes: "js-meeting-type"
                            },
                            items: meetingTypes | setChecked([formValues.meetingType]),
                            errorMessage: errors | findError("meetingType")
                        }) }}
                    {% endif %}

                    {{ hmppsDatepicker({
                        id: "date",
                        name: "date",
                        label: {
                            text: "Date"
                        },
                        errorMessage: errors | findError('date'),
                        classes: 'hmpps-datepicker--fixed-width',
                        value: formValues.date,
                        minDate: today
                    }) }}

                    <div id="offender-events">
                        {# Populated by JavaScript on date changes #}
                    </div>
                    <div id="location-events">
                        {# Populated by JavaScript on date or location changes #}
                    </div>

                    {{ timePicker({
                        id: 'startTime',
                        label: 'Start time',
                        name: 'startTime',
                        hour: formValues.startTimeHours,
                        minute: formValues.startTimeMinutes,
                        errorMessage: errors | findError('startTime')
                    }) }}

                    {{ timePicker({
                        id: 'endTime',
                        label: 'End time',
                        name: 'endTime',
                        hour: formValues.endTimeHours,
                        minute: formValues.endTimeMinutes,
                        errorMessage: errors | findError('endTime')
                    }) }}

                    {{ govukRadios({
                        idPrefix: "recurring",
                        name: "recurring",
                        errorMessage: errors | findError('recurring'),
                        formGroup : {
                          classes: "js-recurring-radios"
                        },
                        fieldset: {
                            id: 'recurringFieldset',
                            legend: {
                                text: "Is this a recurring appointment?",
                                classes: "govuk-fieldset__legend--s"
                            }
                        },
                        items: [{
                            value: "yes",
                            text: "Yes",
                            checked: formValues.recurring == 'yes',
                            conditional: {
                                html: recurringHtml
                            }
                        },
                            {
                                value: "no",
                                text: "No",
                                checked: formValues.recurring == 'no'
                            }
                        ]
                    }) }}

                    {{ govukTextarea({
                        name: "comments",
                        id: "comments",
                        value: formValues.comments,
                        errorMessage: errors | findError('comments'),
                        classes: 'govuk-!-width-one-half',
                        label: {
                            text: "Comments (optional)"
                        },
                        hint: {
                            text: "For confidentiality reasons, comments for Video Link - Court Hearing and Video Link - Probation Meeting appointments will not appear on movement slips."
                        }
                    }) }}

                    <div class="govuk-button-group">
                        {{ govukButton({ text: "Save and continue", type: "submit", preventDoubleClick: true }) }}
                        <a href="{{ refererUrl }}" class="govuk-link govuk-link--no-visited-state">Cancel</a>
                    </div>
                </form>
            </div>
        </div>

    {% endblock %}
{% endblock %}

{% block pageScripts %}
    <script src="/assets/js/addAppointment.js"></script>
{% endblock %}
