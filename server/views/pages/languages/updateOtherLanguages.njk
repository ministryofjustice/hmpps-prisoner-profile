{% extends "../edit/editPage.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from 'components/miniBanner/miniBanner.njk' import miniBanner %}
{% from "../../macros/otherLanguagesText.njk" import otherLanguagesText %}
{% from "../../macros/nomisLockedWarning.njk" import nomisLockedWarning %}
{% block form %}
  <h1 class="govuk-heading-l">{{ title }}</h1>
  <form id="otherLanguagesForm" method="post" novalidate="novalidate" autocomplete="off">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
    <input type="hidden" id="language-error" name="languageError" value="{{ invalidInput }}"/>

    {{ govukSelect({
			id: "language",
			name: "language",
			label: {
				text: languageLabel,
				classes: 'govuk-label--s'
			},
			items: languageOptions,
			errorMessage: errors | findError("language"),
			classes: "js-autocomplete-select",
			attributes: {
        "data-qa": "select-language-input",
        "data-input-classes": "govuk-input--width-30",
        "data-menu-classes": "govuk-input--width-30"
			}
		}) }}
    {% call govukFieldset({
      legend: {
        text: 'Which skills do they have in this language?',
        classes: "govuk-fieldset__legend--s",
        isPageHeading: false
      }
    }) %}
    {{ govukCheckboxes({
      name: "languageSkills",
      hint: { text: 'Select all that apply.' },
      items: [
        {
          value: "canSpeak",
          text: "Speaks",
          checked: formValues.canSpeak
        },
        {
          value: "canWrite",
          text: "Writes",
          checked: formValues.canWrite
        },
        {
          value: "canRead",
          text: "Reads",
          checked: formValues.canRead
        }
      ]
    }) }}
    {% endcall %}
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save and add another language",
        type: "submit",
        preventDoubleClick: true,
        classes: "js-autocomplete-submit govuk-button--secondary",
        attributes: { name: "action", value: "another", "data-qa": "save-and-add-another-button" }
      }) }}
    </div>
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save",
        type: "submit",
        preventDoubleClick: true,
        classes: "js-autocomplete-submit",
        attributes: { "data-qa": "save-button" }
      }) }}
      <a
        href="/prisoner/{{ prisonerNumber }}/personal#personal-details"
        class="govuk-link govuk-link--no-visited-state"
        data-qa="cancel-button">Cancel</a>
    </div>
  </form>
{% endblock %}
{% block sideBar %}
  <aside class="other-languages-sidebar">
    <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Main language</h2>
    {% if not (mainLanguage.preferredSpokenLanguage or mainLanguage.preferredWrittenLanguage) %}
      <div data-qa="no-language-entered">Not entered</div>
    {% else %}
      <div data-qa="spoken-language">
        {% if mainLanguage.preferredSpokenLanguage %}
          {{ mainLanguage.preferredSpokenLanguage.description }}
          {{ "(interpreter required)" if mainLanguage.interpreterRequired }}
        {% endif %}
      </div>
      <div data-qa="written-language">
        {% if mainLanguage.preferredWrittenLanguage and mainLanguage.preferredWrittenLanguage.code != mainLanguage.preferredSpokenLanguage.code %}
          {{ mainLanguage.preferredWrittenLanguage.description }} (written)
        {% endif %}
      </div>
    {% endif %}
    {% if otherLanguages.length > 0 %}
      <h2 class="govuk-heading-s govuk-!-margin-bottom-2 govuk-!-margin-top-4">Other languages</h2>
      {% for lang in otherLanguages %}
        <div class="govuk-!-padding-bottom-2">
          {{ lang.language.description }}
          ({{ otherLanguagesText(lang, false) }})
        </div>
      {% endfor %}
    </aside>
  {% endif %}
{% endblock %}
