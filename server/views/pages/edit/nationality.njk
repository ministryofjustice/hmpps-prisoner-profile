{% extends "./editPage.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/character-count/macro.njk" import govukCharacterCount %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% block form %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-4">Nationality</h1>
  <form method="post" novalidate="novalidate" autocomplete="off">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
    <input type="hidden" id="autocomplete-error" name="autocompleteError" value="{{ autocompleteError }}"/>

    <div class="govuk-form-group">
      {% set autocompleteOptions = [{ value: '', text: 'Please select a nationality' }].concat(autocompleteOptions) %}
      {% set autocompleteHtml %}
      {{ govukSelect({
        id: "autocomplete",
        name: "autocompleteField",
        label: {
            text: autocompleteOptionLabel
        },
        items: autocompleteOptions,
        errorMessage: errors | findError("autocomplete"),
        classes: "js-autocomplete-select",
        formGroup: {
            classes: "govuk-!-width-one-third"
        },
        attributes: {
            "data-test": "select-autocomplete-input",
            "data-input-classes": "govuk-input--width-30",
            "data-menu-classes": "govuk-input--width-30"
        }
      }) }}
      {% endset -%}
      {% set radioOptions = radioOptions.concat({
        value: "OTHER",
        text: autocompleteOptionTitle,
        conditional: { html: autocompleteHtml },
        checked: autocompleteSelected or autocompleteOptions | containsSelected
      }) %}
      {{ govukRadios({
        idPrefix: "radio",
        name: "radioField",
        errorMessage: errors | findError("radioField"),
        fieldset: {
            id: "radioFieldset",
            legend: {
                text: formTitle,
                isPageHeading: false,
                classes: "govuk-fieldset__legend--m"
            }
        },
        hint: {
            text: hintText
        },
        items: radioOptions
      }) }}
      {{ govukCharacterCount({
        name: "additionalNationalities",
        id: "additional-nationalities",
        classes: "govuk-!-width-two-thirds",
        rows: 1,
        maxlength: 40,
        value: additionalNationalitiesValue,
        errorMessage: errors | findError('additional-nationalities'),
        label: {
            text: "Additional nationalities",
            isPageHeading: false,
            classes: "govuk-label--m"
        },
        hint: { text: "Enter any additional nationalities this person holds." }
      }) }}
    </div>
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save",
        type: "submit",
        classes: "js-autocomplete-submit",
        preventDoubleClick: true,
        attributes: { "data-qa": "edit-submit-button" }
      }) }}
      <a
        href="/prisoner/{{ prisonerNumber }}/personal#{{ redirectAnchor }}"
        class="govuk-link govuk-link--no-visited-state"
        data-qa="edit-cancel-button">Cancel</a>
    </div>
  </form>
{% endblock %}
