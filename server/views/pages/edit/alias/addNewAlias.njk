{% extends "../editPage.njk" %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from 'components/miniBanner/miniBanner.njk' import miniBanner %}
{% from "govuk/components/fieldset/macro.njk" import govukFieldset %}
{% from "../../../macros/nomisLockedWarning.njk" import nomisLockedWarning %}
{% block form %}
  <h1 class="govuk-heading-l govuk-!-margin-bottom-4">{{ formTitle }}</h1>
  <form class="hmpps-name-change" method="post" novalidate="novalidate" autocomplete="off">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
    <div class="govuk-form-group govuk-form-group--error">
      <p id="alias-error" class="govuk-error-message">
        <span class="govuk-visually-hidden">Error:</span> This alias already exists
      </p>
    {{ govukInput({
      id: 'firstName',
      name: 'firstName',
      label: {
        text: 'First name',
        classes: 'govuk-label--s'
      },
      value: formValues.firstName,
      classes: 'govuk-input--error',
      errorMessage: errors | findError('firstName')
    }) }}
    {{ govukInput({
        id: 'middleName1',
        name: 'middleName1',
        label: {
          text: 'Middle name',
          classes: 'govuk-label--s govuk-input--error'
        },
        value: formValues.middleName1,
      classes: 'govuk-input--error',
        errorMessage: errors | findError('middleName1')
      }) }}
    {{ govukInput({
      id: 'middleName2',
      name: 'middleName2',
      label: {
        text: 'Second middle name',
        classes: 'govuk-label--s govuk-input--error'
      },
      classes: 'govuk-input--error',
      value: formValues.middleName2,
      errorMessage: errors | findError('middleName2')
    }) }}
    {{ govukInput({
      id: 'lastName',
      name: 'lastName',
      label: {
        text: 'Last name',
        classes: 'govuk-label--s govuk-input--error'
      },
      classes: 'govuk-input--error',
      value: formValues.lastName,
      errorMessage: errors | findError('lastName')
    }) }}
    {% set dayErrorClass = ' govuk-input--error' if (errors | findError("dateOfBirth-day")) or (errors | findError("dateOfBirth")) else ' govuk-input--error' %}
    {% set monthErrorClass = ' govuk-input--error' if (errors | findError("dateOfBirth-month")) or (errors | findError("dateOfBirth")) else ' govuk-input--error' %}
    {% set yearErrorClass = ' govuk-input--error' if (errors | findError("dateOfBirth-year")) or (errors | findError("dateOfBirth")) else ' govuk-input--error' %}
    {{ govukDateInput({
      id: "dateOfBirth",
      namePrefix: "dateOfBirth",
      fieldset: {
        legend: {
          text: "Date of birth",
          classes: "govuk-fieldset__legend--s"
        }
      },
      hint: {
        text: "For example, 31 8 1980"
      },
      items: [
        {
          name: "day",
          attributes: { maxlength: 2 },
          classes: "govuk-input--width-2" + dayErrorClass,
          value: formValues['dateOfBirth-day']
        },
        {
          name: "month",
          attributes: { maxlength: 2 },
          classes: "govuk-input--width-2" + monthErrorClass,
          value: formValues['dateOfBirth-month']
        },
        {
          name: "year",
          attributes: { maxlength: 4 },
          classes: "govuk-input--width-4" + yearErrorClass,
          value: formValues['dateOfBirth-year']
        }
      ],
      value: formValues.dateOfBirth,
      errorMessage: { text: 'This date of birth is bonkers '}
    }) }}
    {{ govukRadios({
      name: "sex",
      fieldset: {
        legend: {
          text: "Sex",
          classes: 'govuk-!-font-weight-bold'
        }
      },
      classes: 'dgovuk-input--error',
      items: [
        {
          value: "F",
          text: "Female",
          classes: 'govuk-input--error',
          checked: formValues.sex === "F"
        },
        {
          value: "M",
          text: "Male",
          classes: 'govuk-input--error',
          checked: formValues.sex === "M"
        }
      ]
    }) }}
    </div>
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Save",
        type: "submit",
        preventDoubleClick: true,
        attributes: { "data-qa": "edit-submit-button" }
      }) }}
      <a
        href="/prisoner/{{ miniBannerData.prisonerNumber }}/personal#personal-details"
        class="govuk-link govuk-link--no-visited-state"
        data-qa="edit-cancel-button">Cancel</a>
    </div>

  </form>
{% endblock %}
